<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="fwoop__tokenizer_8h" kind="file" language="C++">
    <compoundname>fwoop_tokenizer.h</compoundname>
    <includes local="no">string</includes>
    <includedby refid="fwoop__dnsquery_8cpp" local="no">basis/fwoop_dnsquery.cpp</includedby>
    <includedby refid="fwoop__tokenizer_8cpp" local="no">basis/fwoop_tokenizer.cpp</includedby>
    <includedby refid="fwoop__httprequest_8cpp" local="no">http/fwoop_httprequest.cpp</includedby>
    <includedby refid="fwoop__httpresponse_8cpp" local="no">http/fwoop_httpresponse.cpp</includedby>
    <includedby refid="fwoop__httpserver_8cpp" local="no">http/fwoop_httpserver.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>string</label>
      </node>
      <node id="1">
        <label>basis/fwoop_tokenizer.h</label>
        <link refid="fwoop__tokenizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>basis/fwoop_dnsquery.cpp</label>
        <link refid="fwoop__dnsquery_8cpp"/>
      </node>
      <node id="3">
        <label>basis/fwoop_tokenizer.cpp</label>
        <link refid="fwoop__tokenizer_8cpp"/>
      </node>
      <node id="6">
        <label>http/fwoop_httpserver.cpp</label>
        <link refid="fwoop__httpserver_8cpp"/>
      </node>
      <node id="4">
        <label>http/fwoop_httprequest.cpp</label>
        <link refid="fwoop__httprequest_8cpp"/>
      </node>
      <node id="1">
        <label>basis/fwoop_tokenizer.h</label>
        <link refid="fwoop__tokenizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>http/fwoop_httpresponse.cpp</label>
        <link refid="fwoop__httpresponse_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classfwoop_1_1Tokenizer" prot="public">fwoop::Tokenizer</innerclass>
    <innerclass refid="classfwoop_1_1Tokenizer_1_1Iterator" prot="public">fwoop::Tokenizer::Iterator</innerclass>
    <innernamespace refid="namespacefwoop">fwoop</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefwoop" kindref="compound">fwoop</ref><sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="classfwoop_1_1Tokenizer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfwoop_1_1Tokenizer" kindref="compound">Tokenizer</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>d_parseString;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>d_delim;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfwoop_1_1Tokenizer_1_1Iterator" kindref="compound">Iterator</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfwoop_1_1Tokenizer_1a49523276cceb35226000864f315ced6d" kindref="member">Tokenizer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;parseString,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delim);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfwoop_1_1Tokenizer_1a161e3590952d679d320753a9565cf76c" kindref="member">~Tokenizer</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfwoop_1_1Tokenizer_1_1Iterator" kindref="compound">Iterator</ref><sp/><ref refid="classfwoop_1_1Tokenizer_1a0e0219715a87091c51d9741cb156f55e" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfwoop_1_1Tokenizer_1_1Iterator" kindref="compound">Iterator</ref><sp/><ref refid="classfwoop_1_1Tokenizer_1ade8197fd4dd1da608469075c91da32e4" kindref="member">end</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classfwoop_1_1Tokenizer_1a8ca689e6b1a1fe07001b7dec809a0939" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classfwoop_1_1Tokenizer" kindref="compound">Tokenizer</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classfwoop_1_1Tokenizer_1_1Iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classfwoop_1_1Tokenizer_1_1Iterator" kindref="compound">Tokenizer::Iterator</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfwoop_1_1Tokenizer" kindref="compound">Tokenizer</ref><sp/>&amp;d_tokenizer;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>d_isEnd;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>d_lastLoc;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>d_loc;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfwoop_1_1Tokenizer_1_1Iterator_1a08dcc38329b19b9d92181f6f396d7b09" kindref="member">Iterator</ref>(<ref refid="classfwoop_1_1Tokenizer" kindref="compound">Tokenizer</ref><sp/>&amp;tokenizer,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isEnd);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classfwoop_1_1Tokenizer_1_1Iterator_1a732d48dac1c1e59a2766d7b3e86e5d5d" kindref="member">~Iterator</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classfwoop_1_1Tokenizer_1_1Iterator_1ac5a5b852e9ca24887cc5497d5383a774" kindref="member">operator++</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classfwoop_1_1Tokenizer_1_1Iterator_1ad2e0a4cb7140924a9145445fbb48233b" kindref="member">operator*</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classfwoop_1_1Tokenizer_1_1Iterator_1ad95f2e8282ad99a484420f8570ebddd0" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classfwoop_1_1Tokenizer_1_1Iterator" kindref="compound">Iterator</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classfwoop_1_1Tokenizer_1_1Iterator_1aae191c4cdfc4a0d27ac375b5adb5f4ab" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classfwoop_1_1Tokenizer_1_1Iterator" kindref="compound">Iterator</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classfwoop_1_1Tokenizer_1a161e3590952d679d320753a9565cf76c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classfwoop_1_1Tokenizer_1a161e3590952d679d320753a9565cf76c" kindref="member">Tokenizer::~Tokenizer</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classfwoop_1_1Tokenizer_1_1Iterator_1a732d48dac1c1e59a2766d7b3e86e5d5d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classfwoop_1_1Tokenizer_1_1Iterator_1a732d48dac1c1e59a2766d7b3e86e5d5d" kindref="member">Tokenizer::Iterator::~Iterator</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classfwoop_1_1Tokenizer_1_1Iterator_1aae191c4cdfc4a0d27ac375b5adb5f4ab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classfwoop_1_1Tokenizer_1_1Iterator_1aae191c4cdfc4a0d27ac375b5adb5f4ab" kindref="member">Tokenizer::Iterator::operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classfwoop_1_1Tokenizer_1_1Iterator" kindref="compound">Iterator</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>rhs);<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>fwoop</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="basis/fwoop_tokenizer.h"/>
  </compounddef>
</doxygen>
